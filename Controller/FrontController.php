<?php

namespace SKCMS\BlogBundle\Controller;

use SKCMS\BlogBundle\Entity\BlogPost;
use SKCMS\BlogBundle\Entity\BlogTag;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class FrontController extends Controller
{
    public function tagAction(BlogTag $tag,$page,$_locale = null){
        if (null == $_locale){
            $_locale = $this->get('request')->getLocale();
        }
        $repo = $this->getDoctrine()->getRepository('SKCMSBlogBundle:BlogPost');
        $blogPosts = $repo->findByTag($tag,$page,$_locale,10);

        $blogPostsCount = $repo->countByTag($tag);
        $maxPages = ceil($blogPostsCount[0][1]/10);

        return $this->render('@SKCMSBlog/tag/explore-tag.html.twig',['tag'=>$tag,'blogPosts'=>$blogPosts,'maxPage'=>$maxPages]);

    }
    public function postAction($slug,$_format,$_locale = null,Request $request)
    {

        if (null === $_locale){
            $_locale = $request->getLocale();
        }
        $em = $this->get('skcms.corebundle.manager.entity');

        $repo = $this->getDoctrine()->getManager()->getRepository('SKCMS\CoreBundle\Entity\Translation\EntityTranslation');
        $translationEntity = $repo->findObjectBySlug($slug,$_locale);

        if (null == $translationEntity)
        {
            throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException('entity doesn\'t exists');
        }

        $repo = $em->getRepository('SKCMSBlogBundle:BlogPost');
        $blogPost = $repo->find($translationEntity->getForeignKey(),$_locale);

        $nextPost = $repo->findNextPost($blogPost);
        $previousPost = $repo->findPreviousPost($blogPost);


        return $this->render('SKCMSBlogBundle:post:post.html.twig',['entity'=>$blogPost,'nextPost'=>$nextPost,'previousPost'=>$previousPost]);
    }

    public function searchAction($_format,$page,Request $request,$_locale = null){
        if (null === $_locale){
            $_locale = $request->getLocale();
        }
        $keyWord = $request->query->get('q');
        if (null !== $keyWord){
            $em = $this->get('skcms.corebundle.manager.entity');
            $repo = $this->getDoctrine()->getManager()->getRepository('SKCMS\CoreBundle\Entity\Translation\EntityTranslation');
            $translationEntities = $repo->search($keyWord,BlogPost::class,['title','content'],$_locale);
            $repo = $em->getRepository('SKCMSBlogBundle:BlogPost');
            $blogPosts = $repo->findById(array_map(function($translationEntity){return $translationEntity['foreignKey'];},$translationEntities),['creationDate'=>"DESC"],$_locale);
            $maxPages = ceil(count($translationEntities)/10);
//            dump($translationEntities);
//            die();

        }
        else{

        }

        return $this->render('SKCMSBlogBundle:post:search.html.twig',['blogPosts'=>$blogPosts,'maxPage'=>$maxPages]);
    }

    public function render($view, array $parameters = array(), Response $response = null)
    {
        $event = new \SKCMS\FrontBundle\Event\PreRenderEvent($this->get('request'));
        $this->get('event_dispatcher')
            ->dispatch(\SKCMS\FrontBundle\Event\SKCMSFrontEvents::PRE_RENDER, $event);


        return parent::render($view, $parameters, $response); // TODO: Change the autogenerated stub
    }
}
